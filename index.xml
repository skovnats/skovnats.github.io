<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Artiom Kovnatsky: Portfolio &amp; Blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Artiom Kovnatsky: Portfolio &amp; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 09 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>#0: Introduction</title>
      <link>http://localhost:1313/posts/beyond_obvious/intro/</link>
      <pubDate>Wed, 09 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/beyond_obvious/intro/</guid>
      <description>Истина, выраженная в форме (например, написанная, сказанная..), перестаёт ей быть, включая и то, что я пишу...исключения, как правило, составляют метафоры, притчи, сказки, пословицы...музыка Прочитав этот тренинг-статью, читатель:
сделает гимнастику для мышления, что позволит, быть может, увеличить осознанность и, соответсвенно, привнести больше свободы в своё мышление и, как следствие, в свою жизнь периодически, думается, тренинг-статью стоит перечитывать, делать пометки, пытаясь понять изложенные смыслы и связи между ними &amp;hellip;также будет иметь представление:</description>
    </item>
    
    <item>
      <title>#1: Синергия в движении: Люди как динамические системы и Бизнес как поток</title>
      <link>http://localhost:1313/posts/beyond_obvious/dynamic_system/</link>
      <pubDate>Wed, 09 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/beyond_obvious/dynamic_system/</guid>
      <description>Истина, выраженная в форме (например, написанная, сказанная..), перестаёт ей быть, включая и то, что я пишу...исключения, как правило, составляют метафоры, притчи, сказки, пословицы...музыка Прочитав этот тренинг-статью, читатель:
сделает гимнастику для мышления, что позволит, быть может, увеличить осознанность и, соответсвенно, привнести больше свободы в своё мышление и, как следствие, в свою жизнь периодически, думается, тренинг-статью стоит перечитывать, делать пометки, пытаясь понять изложенные смыслы и связи между ними &amp;hellip;также будет иметь представление:</description>
    </item>
    
    <item>
      <title>Services</title>
      <link>http://localhost:1313/posts/services/</link>
      <pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/services/</guid>
      <description>Data Specialist You want to monetize your data and need a way to “activate” it
Details The company had customer interaction data, but it wasn’t clear how to use it. I developed a recommendation algorithm that, based on the limited data left by the customer, allowed us to make an initial assessment of the likelihood of the person becoming a customer. This allowed more efficient use of the limited resources of the sales department, focusing on those most likely to benefit from interaction with the company.</description>
    </item>
    
    <item>
      <title>Φιλοσοφία | Philosophy | Философия</title>
      <link>http://localhost:1313/posts/philosophy/</link>
      <pubDate>Tue, 17 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/philosophy/</guid>
      <description>Leave everything, at the very least, no worse than it was before you. I follow this principle in both big life decisions and everyday matters, from major life choices to something as simple as using a restroom at a conference.
Оставляй всё, как минимум, не хуже, чем было до тебя. Я придерживаюсь этого принципа как в глобальных вопросах, так и в повседневных делах: от важных жизненных решений до посещения туалетной кабинки на конференции.</description>
    </item>
    
    <item>
      <title>#0: Metaphorical Autobiography or The Bunker Stories of the Professor</title>
      <link>http://localhost:1313/posts/omega/meta-bio/</link>
      <pubDate>Sun, 26 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/omega/meta-bio/</guid>
      <description>Fig. 1 The Metaphorical Professor&#39;s Dwelling Truth, expressed in form (e.g., written, spoken...), ceases to be truth, including what I am writing... exceptions are usually metaphors, parables, tales, proverbs... music. After reading this, the reader will have an understanding of:
who they are dealing with where I came from what my values are where I am going if we are on the same path and for how long, if yes Ω.</description>
    </item>
    
    <item>
      <title>#1: The Boat, Kandinsky 7.0, and ChatGPT 42.0 or Value-Meaning Journeys</title>
      <link>http://localhost:1313/posts/omega/lodka/</link>
      <pubDate>Sun, 26 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/omega/lodka/</guid>
      <description>Truth, when expressed in form (for example, written, spoken..), ceases to be such, including what I am writing... exceptions usually include metaphors, parables, fairy tales, proverbs... music By reading this training-article, the reader:
will do mental gymnastics, which may increase awareness and, consequently, bring more freedom into their thinking and, as a result, into their life periodically, it seems, the training-article is worth rereading, making notes, trying to understand the meanings expressed and the connections between them &amp;hellip;will also have an understanding:</description>
    </item>
    
    <item>
      <title>#7: The Image of the Future or Andrey&#39;s Journey with Baba Yaga&#39;s Magic Ball of Thread</title>
      <link>http://localhost:1313/posts/omega/opa/</link>
      <pubDate>Sun, 26 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/omega/opa/</guid>
      <description>Fig. 0 Imagine your image of the future. Ω symbolizes the end/final point; Ω is Omega, the last letter of the Greek alphabet. Questions: what &amp;ldquo;colors&amp;rdquo; can be used to paint the future why &amp;ldquo;&amp;hellip;isms&amp;rdquo; are not a solution why hypotheses, and not &amp;ldquo;I know&amp;rdquo; From the author Earlier, the main question was raised: why and how do we interact with each other? Here, I will &amp;ldquo;paint&amp;rdquo; a possible image of the future with &amp;ldquo;colors.</description>
    </item>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <item>
      <title>Go বেসিক</title>
      <link>http://localhost:1313/notes/go/basic/_index.bn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/go/basic/_index.bn/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>http://localhost:1313/notes/go/basic/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/go/basic/introduction/</guid>
      <description> Hello World A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go Variables Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34; Shortcut:
msg := &amp;#34;Hello&amp;#34; Constants const Phi = 1.618 </description>
    </item>
    
    <item>
      <title>Basic Types</title>
      <link>http://localhost:1313/notes/go/basic/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/go/basic/types/</guid>
      <description>Strings str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string` Numbers Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.</description>
    </item>
    
    <item>
      <title>অ্যাডভান্সড</title>
      <link>http://localhost:1313/notes/go/advanced/_index.bn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/go/advanced/_index.bn/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Flow Control</title>
      <link>http://localhost:1313/notes/go/basic/flow-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/go/basic/flow-control/</guid>
      <description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) Switch switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default! fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() } Loop for count := 0; count &amp;lt;= 10; count++ { fmt.Println(&amp;#34;My counter is at&amp;#34;, count) } entry := []string{&amp;#34;Jack&amp;#34;,&amp;#34;John&amp;#34;,&amp;#34;Jones&amp;#34;} for i, val := range entry { fmt.</description>
    </item>
    
    <item>
      <title>File Manipulation</title>
      <link>http://localhost:1313/notes/go/advanced/files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/go/advanced/files/</guid>
      <description> Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) </description>
    </item>
    
    <item>
      <title>Bash Variables</title>
      <link>http://localhost:1313/notes/bash/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/bash/basic/</guid>
      <description> Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi </description>
    </item>
    
    <item>
      <title>Go এর নোট সমূহ</title>
      <link>http://localhost:1313/notes/go/_index.bn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/go/_index.bn/</guid>
      <description>Go Notes </description>
    </item>
    
    
    <item>
      <title>ব্যাশের নোট সমূহ</title>
      <link>http://localhost:1313/notes/bash/_index.bn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/bash/_index.bn/</guid>
      <description>Bash Notes </description>
    </item>
    
    
  </channel>
</rss>
